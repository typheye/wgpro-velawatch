<template>
	<stack class="stack">
		<scroll id="ys" class="outer" scroll-y="true" bounces="true">
			<div class="inner-container">
				<scroll id="xs" class="inner" scroll-x="true" bounces="true">
					<!-- 添加宽度800px的容器包裹图片 -->
					<div class="image-container">
						<image
							class="image"
							src="{{ imguri }}"
							alt="/common/mipmap/c0.png"
						/>
					</div>
				</scroll>
			</div>
		</scroll>
		<marquee class="webinfo" show="{{ showdebug }}">{{ webinfo }}</marquee>
		<marquee class="fpsinfo" show="{{ showdebug }}">{{ fpsinfo }}</marquee>
	</stack>
</template>

<script>
import storage from "../../../../../utils/storage.js";
import fetch from "../../../../../utils/fetch.js";
export default {
	private: {
		uri: "",
		imguri: "",
		isScrollCenter: false,
		webinfo: "",
		fpsinfo: "",
		showdebug: true,
	},
	onBackPress() {
		this.$app.$def.toCancel(true);
		return true;
	},
	onReady() {
		this.switload();
	},
	onShow() {
		if (!this.isScrollCenter) {
			this.isScrollCenter = true;
			this.toCenterView();
		}
		this.toRefresh();
	},
	toBack() {
		this.$app.$def.goBack();
	},
	toRefresh() {
		const timestamp0 = Date.now();
		fetch.fetch({
			url: "http://x1webview.vela.typheye.com/wvReq",
			data_GET: {
				url: this.uri,
			},
			responseType: "text",
			success: (response) => {
				const time = Date.now() - timestamp0;
				this.webinfo = time + " ms";
				this.fpsinfo =
					this.$app.$def.formatDecimal((1 / time) * 1000, 2) + " FPS";
				const reqback = JSON.parse(response.data);
				this.imguri = reqback["url"];
			},
			fail: (data, code) => {
				this.toBack();
				this.$app.$def.toTips(
					"",
					`the oninit handling fail, errMsg = ${data}, errCode = ${code}`
				);
			},
		});
	},
	toCenterView() {
		this.$element("ys").scrollTo({
			top: 160,
			behavior: "instant",
		});
		this.$element("xs").scrollTo({
			left: 260,
			behavior: "instant",
		});
	},
	switload() {
		storage.gets({
			keys: ["wgsettings_browser_hideDebug"],
			success: (datas) => {
				if (datas.wgsettings_browser_hideDebug == true) this.showdebug = false;
			},
			fail: () => {},
		});
	},
};
</script>

<style>
.stack {
	width: 100%;
	height: 100%;
}

.webinfo {
	width: 100%;
	height: 40px;
	background-color: rgba(0, 0, 0, 0.8);
	color: green;
	text-align: center;
	font-size: 22px;
	font-weight: bold;
}

.fpsinfo {
	width: 100%;
	height: 40px;
	background-color: rgba(0, 0, 0, 0.8);
	color: yellow;
	text-align: center;
	font-size: 20px;
	font-weight: bold;
	margin-top: 40px;
}

.outer {
	width: 100%;
	height: 100%;
	background-color: black;
}

.inner-container {
	height: 800px; /* 触发垂直滚动 */
}

.inner {
	width: 100%;
	height: 100%;
	flex-direction: row; /* 关键：启用横向布局 */
}

.image-container {
	width: 1000px; /* 触发水平滚动 */
	height: 100%;
	justify-content: center;
	align-items: center;
}

.image {
	width: 800px;
	height: 600px;
}
</style>
