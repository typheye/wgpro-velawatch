<template>
	<div class="page">
		<div class="tab" onclick="toBack">
			<text class="tab-back">{{ tabtextleft }}</text>
			<marquee class="tab-text">
				{{ tabtext }}
			</marquee>
			<text class="tab-more"></text>
		</div>
		<div class="wgpro-frglayout" if="{{ isMenu }}">
			<list
				class="wgpro-listlayout3"
				bounces="true"
				onscroll="onScroll"
				onscrolltop="onScrollTop"
				onscrollbottom="onScrollBottom"
				onscrolltouchup="onScrollTouchup"
			>
				<list-item
					for="{{ chatroommenuList }}"
					class="wgpro-item4"
					type="item1"
					style="margin-top:{{ $item.h1 }};height: {{ $item.h0 }}px;background-color: {{ $item.color }};"
					ontouchstart="htm(1, $item.num)"
					ontouchend="htm(0, $item.num)"
					onclick="toRunMenu($item.id)"
				>
					<text
						class="wgpro-item-texts-text2"
						style="color: {{ $item.textcolor }};"
					>
						{{ $item.name }}
					</text>
				</list-item>
			</list>
		</div>
		<div class="wgpro-frglayout" else>
			<text class="wgpro-menu-text" onclick="opmenu(true)">
				• {{ $t("app.menubtn") }} •
			</text>
			<list
				class="wgpro-listlayout2"
				bounces="true"
				onscroll="onScroll"
				onscrolltop="onScrollTop"
				onscrollbottom="onScrollBottom"
				onscrolltouchup="onScrollTouchup"
			>
				<list-item
					for="{{ chatroomList }}"
					class="wgpro-item3"
					type="item1"
					style="margin-top:{{ $item.h1 }};height: {{ $item.h0 }}px;background-color: {{ $item.color }};"
					ontouchstart="ht(1, $item.num)"
					ontouchend="ht(0, $item.num)"
					onclick="toRun($item.id)"
					onlongpress="toRunLong($item.id, $item.num)"
				>
					<div class="wgpro-item-left" show="{{ $item.show }}">
						<div class="wgpro-item-left-ico-back">
							<img class="wgpro-item-left-ico" src="/common/mipmap/a37.png" />
						</div>
					</div>
					<div class="wgpro-item-texts-none2">
						<text class="wgpro-item-texts-text">
							{{ $item.name }}
						</text>
					</div>
				</list-item>
			</list>
		</div>
	</div>
</template>

<script>
import storage from "@system.storage";
export default {
	private: {
		chatroomList: [
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
		],
		chatroommenuList: [
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
		],
		isMenu: false,
		selectItemNum: -1,
		menuflag: "def",
		roomlistJSON: "",
		tabtext: "",
		tabtextleft: "‹",
	},
	ht(t, i) {
		if (t) eval("this.chatroomList[" + i + "]['color'] = 'black'");
		else eval("this.chatroomList[" + i + "]['color'] = '#3c3c3c'");
	},
	htm(t, i) {
		if (t) eval("this.chatroommenuList[" + i + "]['color'] = 'black'");
		else eval("this.chatroommenuList[" + i + "]['color'] = '#3c3c3c'");
	},
	onBackPress() {
		if (!this.isMenu) this.$app.$def.toCancel(true);
		else {
			this.$app.$def.shortVib(true);
			this.opmenu(false);
		}
		return true;
	},
	onInit() {
		this.opmenu(false);
	},
	onReady() {
		this.chatroomListReady();
		this.chatroommenuListReady();
	},
	toBack() {
		if (!this.isMenu) this.$app.$def.goBack();
	},
	toRun(id) {
		let needoffmenu = true;
		if (id == "") needoffmenu = false;
		else {
			var v_uri = "";
			if (id == "") v_uri = "/pages/ui/";
			this.$app.$def.goPage(v_uri);
		}
	},
	toRunLong(id, num) {
		this.menuflag = "item";
		this.selectItemNum = num;
		this.ht(0, num); //fix item color
		let needoffmenu = true;
		if (id == "") needoffmenu = false;
		else this.opmenu(true);
	},
	toRunMenu(id) {
		let needoffmenu = true;
		if (id == "") needoffmenu = false;
		else if (id == "exit") {
			needoffmenu = false;
			this.$app.$def.goBack();
		} else if (id == "back");
		else if (id == "update") this.chatroomListReady();
		else if (id == "delroom") {
			var roomlist = JSON.parse(this.roomlistJSON);
			roomlist.splice(this.selectItemNum, 1);
			roomlist = JSON.stringify(roomlist, null);
			this.$app.$def.settingsChange("wgsettings_wgchat_roomlist", roomlist);
			this.chatroomListReady();
		} else if (id == "roominfo")
			this.$app.$def.toTips(
				this.$t("menu.chatroomlist.item.item1.name"),
				this.$app.$def.textFormat(
					this.$t("menu.chatroomlist.item.item1.demo"),
					{
						roomname: this.chatroomList[this.selectItemNum]["name"],
						roomid: this.chatroomList[this.selectItemNum]["id"],
					}
				)
			);
		else {
			var v_uri = "";
			if (id == "addroom") v_uri = "/pages/ui/";
			else if (id == "createroom") v_uri = "/pages/ui/";
			else if (id == "gosettings") v_uri = "/pages/ui/";
			this.$app.$def.goPage(v_uri);
		}
		this.menuflag = "def";
		if (needoffmenu) this.opmenu(false);
	},
	opmenu(can) {
		this.chatroommenuListReady();
		if (can) {
			this.tabtext = this.$t("app.menu");
			this.tabtextleft = "";
			this.isMenu = true;
		} else {
			this.tabtext = this.$t("display.wgchat.tabtext");
			this.tabtextleft = "‹";
			this.isMenu = false;
		}
	},
	chatroomListReady() {
		this.chatroomList = [
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
			{ num: -1, color: "", h0: 100, h1: 10, show: false, id: "", name: "" },
		];
		storage.get({
			key: "wgsettings_wgchat_roomlist",
			success: (data) => {
				this.roomlistJSON = data;
				const roomlist = JSON.parse(data);
				if (roomlist.length > 0) {
					let i = 0;
					let tol = 10;
					for (i; i < tol; i++) {
						let inx = i + 1;
						if (inx > roomlist.length) {
							this.chatroomList[i]["h0"] = 0;
							this.chatroomList[i]["h1"] = 0;
						} else {
							let name = roomlist[i]["name"];
							let id = roomlist[i]["id"];
							this.chatroomList[i]["num"] = i;
							this.chatroomList[i]["color"] = "#3c3c3c";
							this.chatroomList[i]["show"] = true;
							this.chatroomList[i]["h0"] = 100;
							this.chatroomList[i]["h1"] = 10;
							this.chatroomList[i]["id"] = id;
							this.chatroomList[i]["name"] = name;
						}
					}
				}
			},
		});
	},
	chatroommenuListReady() {
		this.chatroommenuList = [
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
			{ num: -1, color: "", h0: 60, h1: 10, textcolor: "", id: "", name: "" },
		];
		let i = 0;
		let tol = 6;
		let menulistlen = tol;
		if (this.menuflag == "item") menulistlen = 3;
		for (i; i < tol; i++) {
			let inx = i + 1;
			if (inx > menulistlen) {
				this.chatroommenuList[i]["h0"] = 0;
				this.chatroommenuList[i]["h1"] = 0;
			} else {
				this.chatroommenuList[i]["h0"] = 60;
				this.chatroommenuList[i]["h1"] = 10;
				let name = "";
				let id = "";
				eval(
					"name = this.$t('menu.chatroomlist." +
						this.menuflag +
						".item" +
						inx +
						".name')"
				);
				eval(
					"id = this.$t('menu.chatroomlist." +
						this.menuflag +
						".item" +
						inx +
						".id')"
				);
				this.chatroommenuList[i]["num"] = i;
				this.chatroommenuList[i]["color"] = "#3c3c3c";
				if (inx == menulistlen) this.chatroommenuList[i]["textcolor"] = "red";
				else this.chatroommenuList[i]["textcolor"] = "white";
				this.chatroommenuList[i]["id"] = id;
				this.chatroommenuList[i]["name"] = name;
			}
		}
	},
};
</script>

<style>
@import "../../../../common/style/index.css";
@import "../../../../common/style/wgpro.css";
</style>
