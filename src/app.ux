<script>
import router from "@system.router";
import vibrator from "@system.vibrator";
import app from "@system.app";
import storage from "@system.storage";
export default {
	onCreate() {
		console.log("app created");
	},
	onDestroy() {
		console.log("app destroyed");
	},
	goBack() {
		router.back();
	},
	goPage(_uri) {
		router.push({
			uri: _uri,
		});
	},
	goReplacePage(_uri) {
		router.replace({
			uri: _uri,
		});
	},
	toTips(_title, _text) {
		router.push({
			uri: "/pages/ui/popup/tips",
			params: {
				title: _title,
				text: _text,
			},
		});
	},
	toTipsWithQR(_title, _text, _uri) {
		router.push({
			uri: "/pages/ui/popup/showqr",
			params: {
				title: _title,
				text: _text,
				uri: _uri,
			},
		});
	},
	toCancel(can) {
		this.shortVib(true);
		if (can) router.back();
	},
	toExit() {
		app.terminate();
	},
	getAppinfo() {
		return app.getInfo();
	},
	textFormat(template, data) {
		return template.replace(/\${(\w+)}/g, (_, key) => data[key] || "");
	},
	shortVib(can) {
		var _mode = "long";
		if (can) _mode = "short";
		vibrator.vibrate({
			mode: _mode,
		});
	},
	formatDecimal(num, decimalPlaces = 1) {
		if (typeof num !== "number" || isNaN(num)) return 123;
		const n = Math.max(0, Math.floor(decimalPlaces));
		if (n === 0) return Math.round(num).toString();
		return num.toFixed(n);
	},
	settingsInit() {
		//wgsettings_init 初始化
		this.settingsChange("wgsettings_init", "true");
		//wgsettings_autoCheckUpdate 自动检测更新
		this.settingsChange("wgsettings_autoCheckUpdate", "true");
		//wgsettings_autoCheckUpdateIsShow 自动检测更新是否已经显示
		this.settingsChange("wgsettings_autoCheckUpdateIsShow", "false");
	},
	settingsReset() {
		storage.clear({
			success: (data) => {
				console.log("handling success");
			},
			fail: (data, code) => {
				console.log(`handling fail, code = ${code}`);
			},
		});
	},
	settingsChange(_key, _data) {
		storage.set({
			key: _key,
			value: _data + "",
			success: (data) => {
				console.log("handling success");
			},
			fail: (data, code) => {
				console.log(`handling fail, code = ${code}`);
			},
		});
	},
};
</script>
